C51 COMPILER V9.57.0.0   MAIN                                                              05/30/2025 00:00:05 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\Study\Keil\keil c51\KeilData\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND 
                    -PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "Delay.h"
   3          #include "Motor.h"
   4          #include "LCD1602.h"
   5          #include "ADC0832.h"
   6          #include "Key.h"
   7          #include "LightControl.h"
   8          #include "UART.h"
   9          
  10          #define uchar unsigned char
  11          
  12          // 外部变量声明
  13          extern uchar adc_value;    // ADC原始值 (LightControl.c)
  14          extern int lux_value;      // 转换后的光照强度值 (LightControl.c)
  15          extern bit uart_rx_flag;   // 串口接收标志 (UART.c)
  16          extern uchar uart_rx_data; // 串口接收数据 (UART.c)
  17          
  18          void main() {
  19   1          int last_key = NO_KEY_PRESSED;
  20   1          int current_light_state = -1;  // -1:初始状态, 0:正常光照, 1:强光照
  21   1          int new_light_state = -1;      // 新的光照状态
  22   1          int current_key;               // 当前按键状态变量
  23   1          
  24   1          // 初始化各模块
  25   1          ADC0832_Init();
  26   1          LCD_Init();
  27   1          UART_Init();
  28   1          
  29   1          // 初始显示光照信息
  30   1          display_light_info(0);
  31   1          
  32   1          // 发送系统启动信息
  33   1          UART_SendString("System Started\r\n");
  34   1          UART_SendString("Commands:\r\n");
  35   1          UART_SendString("C - Motor Clockwise\r\n");
  36   1          UART_SendString("A - Motor Counter-Clockwise\r\n");
  37   1          UART_SendString("S - Motor Stop\r\n");
  38   1          
  39   1          while(1) {
  40   2              // 处理串口接收到的命令
  41   2              if(UART_GetRxFlag())
  42   2              {
  43   3                  UART_ProcessCommand(uart_rx_data);
  44   3                  UART_ClearRxFlag();
  45   3              }
  46   2              
  47   2              // 获取当前按键状态
  48   2              current_key = get_key_status();
  49   2              
  50   2              // 处理按键事件
  51   2              handle_key_events(&last_key, current_key);
  52   2              
  53   2              // 读取并转换光照强度
  54   2              adc_value = ADC0832_ReadChannel(0);
C51 COMPILER V9.57.0.0   MAIN                                                              05/30/2025 00:00:05 PAGE 2   

  55   2              
  56   2              // 添加阈值判断，低于阈值时视为0
  57   2              if (adc_value < ADC_THRESHOLD) {
  58   3                  adc_value = 0;
  59   3              }
  60   2              
  61   2              lux_value = (int)(adc_value * LUX_PER_ADC);
  62   2              
  63   2              // 更新显示
  64   2              update_light_display(lux_value);
  65   2              
  66   2              // 获取当前光照状态
  67   2              new_light_state = get_light_state(lux_value);
  68   2              
  69   2              // 处理光照状态
  70   2              process_light_state(new_light_state, &current_light_state);
  71   2              
  72   2              Delay_ms(200);
  73   2          }
  74   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    176    ----
   CONSTANT SIZE    =     98    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
